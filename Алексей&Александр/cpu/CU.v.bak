module CU(input [7:0] addres,
			 input [31:0] IN,
			 input clk,
			 output reg load_en,
			 output reg [3:0] A_sel,
			 output reg [3:0] B_sel,
			 output reg [3:0] dest_sel,
			 output reg [15:0] data_in,
			 output reg data_sel,
			 output reg [3:0] op_sel,
			 output reg const_sel,
			 output reg [15:0] const_in,
			 output reg J,
			 output reg [1:0] B,
			 output reg offset_sel,
			 output reg [15:0] im_offset);

//wire [31:27] code;
//assign code = ;
always @(addres) begin


end


always @(IN) begin
dest_sel=IN[26:23];
A_sel=IN[22:19];
B_sel=IN[18:15];
const_in=IN[18:3];
im_offset=IN[18:3];
case (IN[31:27])
0:;
1: /*MOVA*/begin
const_in=0;
const_sel=1;
op_sel=4'b0101;
data_in=0;
data_sel=0;
load_en=1;
end
2:/*ADD*/begin
const_in=0;
const_sel=0;
op_sel=4'b0000;
data_sel=0;
load_en=1;
end
3:/*SUB*/begin
const_in=0;
const_sel=0;
op_sel=4'b0001;
data_sel=0;
load_en=1;
end
4:/*AND*/begin
const_in=0;
const_sel=0;
op_sel=4'b0100;
data_sel=0;
load_en=1;
end
5:/*OR*/begin
const_in=0;
const_sel=0;
op_sel=4'b0101;
data_sel=0;
load_en=1;
end
6:/*XOR*/begin
const_in=0;
const_sel=0;
op_sel=4'b0110;
data_sel=0;
load_en=1;
end
7:/*NOT*/begin
const_in=0;
const_sel=0;
op_sel=4'b0111;
data_sel=0;
load_en=1;
end
8:/*ADI*/begin
const_sel=1;
op_sel=4'b0000;
data_sel=0;
B_sel=0;
load_en=1;
end
9:/*SBI*/begin
const_sel=1;
op_sel=4'b0001;
data_sel=0;
B_sel=0;
load_en=1;
end
10:/*ANI*/begin
const_sel=1;
op_sel=4'b0100;
data_sel=0;
B_sel=0;
load_en=1;
end
11:/*ORI*/begin
const_sel=1;
op_sel=4'b0101;
data_in=0;
data_sel=0;
B_sel=0;
load_en=1;
end
12:/*XRI*/begin
const_sel=1;
op_sel=4'b0110;
data_in=0;
data_sel=0;
B_sel=0;
load_en=1;
end
13:/*MOVB*/begin
A_sel=IN[18:15];
B_sel=IN[22:19];
const_sel=1;
data_in=0;
op_sel=4'b0101;
data_in=0;
data_sel=0;
load_en=1;
end
14:/*LSR*/begin
op_sel=4'b1001;
data_in=0;
data_sel=0;
load_en=1;
end
15:/*LSL*/begin
const_sel=0;
op_sel=4'b1000;
data_in=0;
data_sel=0;
load_en=1;
end
16/*LD*/:;
17/*ST*/:;
18/*BZ*/:begin
B=0;
const_sel=0;
op_sel=0;
load_en=0;
data_sel=0;
data_in=0;
end
19/*BNZ*/:begin
B=1;
const_sel=0;
op_sel=0;
load_en=0;
data_sel=0;
data_in=0;
end
20/*JMP*/:begin
B=2;
const_sel=0;
op_sel=0;
load_en=0;
data_sel=0;
data_in=0;
end
21/*JMR*/:begin
B=3;
const_sel=0;
op_sel=0;
load_en=0;
data_sel=0;
data_in=0;
end
22:;
endcase

end

endmodule